[{"C:\\Documents\\meet\\src\\index.js":"1","C:\\Documents\\meet\\src\\App.js":"2","C:\\Documents\\meet\\src\\reportWebVitals.js":"3","C:\\Documents\\meet\\src\\CitySearch.js":"4","C:\\Documents\\meet\\src\\api.js":"5","C:\\Documents\\meet\\src\\NumberOfEvents.js":"6","C:\\Documents\\meet\\src\\EventList.js":"7","C:\\Documents\\meet\\src\\mock-data.js":"8","C:\\Documents\\meet\\src\\Event.js":"9","C:\\Documents\\meet\\src\\serviceWorkerRegistration.js":"10"},{"size":946,"mtime":1627343409186,"results":"11","hashOfConfig":"12"},{"size":1220,"mtime":1626921732052,"results":"13","hashOfConfig":"12"},{"size":377,"mtime":1626733314329,"results":"14","hashOfConfig":"12"},{"size":1692,"mtime":1626918871095,"results":"15","hashOfConfig":"12"},{"size":3481,"mtime":1626920317306,"results":"16","hashOfConfig":"12"},{"size":1316,"mtime":1627004747931,"results":"17","hashOfConfig":"12"},{"size":469,"mtime":1626911554635,"results":"18","hashOfConfig":"12"},{"size":64018,"mtime":1626911554639,"results":"19","hashOfConfig":"12"},{"size":1341,"mtime":1627004312294,"results":"20","hashOfConfig":"12"},{"size":5201,"mtime":1626918871098,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"se0ofb",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Documents\\meet\\src\\index.js",[],"C:\\Documents\\meet\\src\\App.js",[],["44","45"],"C:\\Documents\\meet\\src\\reportWebVitals.js",[],"C:\\Documents\\meet\\src\\CitySearch.js",[],"C:\\Documents\\meet\\src\\api.js",["46","47"],"/**\r\n *\r\n * @param {*} events:\r\n * The following function should be in the “api.js” file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\nimport { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\n\r\n\r\n\r\nconst extractLocations = (events) => {\r\n    var extractLocations = events.map((event) => event.location);\r\n    var locations = [...new Set(extractLocations)];\r\n    return locations;\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n    const result = await fetch(\r\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n    )\r\n        .then((res) => res.json())\r\n        .catch((error) => error.json());\r\n\r\n    return result;\r\n};\r\n\r\n\r\n\r\nconst getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n    if (!accessToken || tokenCheck.error) {\r\n        await localStorage.removeItem(\"access_token\");\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const code = await searchParams.get(\"code\");\r\n        if (!code) {\r\n            const results = await axios.get(\r\n                \"https://h5pvyehvv3.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n            );\r\n            const { authUrl } = results.data;\r\n            return (window.location.href = authUrl);\r\n        }\r\n        return code && getToken(code);\r\n    }\r\n    return accessToken;\r\n}\r\n\r\nconst getEvents = async () => {\r\n    NProgress.start();\r\n\r\n    if (window.location.href.startsWith(\"http://localhost\")) {\r\n        NProgress.done();\r\n        return mockData;\r\n    }\r\n\r\n\r\n    const token = await getAccessToken();\r\n\r\n    if (token) {\r\n        removeQuery();\r\n        const url = 'https://h5pvyehvv3.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\r\n        const result = await axios.get(url);\r\n        if (result.data) {\r\n            var locations = extractLocations(result.data.events);\r\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n        }\r\n        NProgress.done();\r\n        return result.data.events;\r\n    }\r\n};\r\n\r\nconst removeQuery = () => {\r\n    if (window.history.pushState && window.location.pathname) {\r\n        var newurl =\r\n            window.location.protocol +\r\n            \"//\" +\r\n            window.location.host +\r\n            window.location.pathname;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    } else {\r\n        newurl = window.location.protocol + \"//\" + window.location.host;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    }\r\n};\r\n\r\nconst getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const { access_token } = await fetch(\r\n        'https://h5pvyehvv3.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n    )\r\n        .then((res) => {\r\n            return res.json();\r\n        })\r\n        .catch((error) => error);\r\n\r\n    access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n    return access_token;\r\n};\r\n\r\nexport { getEvents, getAccessToken, extractLocations, getToken, checkToken };","C:\\Documents\\meet\\src\\NumberOfEvents.js",[],"C:\\Documents\\meet\\src\\EventList.js",[],"C:\\Documents\\meet\\src\\mock-data.js",[],"C:\\Documents\\meet\\src\\Event.js",[],"C:\\Documents\\meet\\src\\serviceWorkerRegistration.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":67,"column":100,"nodeType":"54","messageId":"55","endLine":67,"endColumn":101},{"ruleId":"52","severity":1,"message":"53","line":96,"column":83,"nodeType":"54","messageId":"55","endLine":96,"endColumn":84},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]